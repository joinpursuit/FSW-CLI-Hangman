{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./Board.js","webpack:///./ComputerPlayer.js","webpack:///./Game.js","webpack:///./HumanPlayer.js","webpack:///./View.js","webpack:///./index.js","webpack:///./word.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,OAAO,YAAY,GAAG,mBAAO,CAAC,4BAAW;;AAEzC;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA,OAAO,YAAY,GAAG,mBAAO,CAAC,4BAAW;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,wBAAwB;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,+B;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAU,YAAY;AACoB;AACM;AACX;AACP;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gDAAK;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAW;AAC3B,eAAe,yDAAc;AAC7B,qBAAqB,0BAA0B;AAC/C;AACe,mEAAI,E;;;;;;;;;;;ACzDnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yB;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA,Q;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,6B;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,C;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACE;AACY;AACM;AACX;AACT;;AAE5B;AACA,mBAAmB,gDAAI;AACvB,YAAY,sDAAW;AACvB,YAAY,yDAAc;AAC1B;AACA;AACA,QAAQ,+CAAI;AACZ,CAAC;;;;;;;;;;;;;ACdD;;;;AAIA,kBAAkB,Y","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","const {allTheWords} = require(\"./word.js\")\n\nclass Board {\n    constructor(length) {     \n        this.board = new Array(length).fill(\"_\")     \n    }\n    length() {\n        return this.board.length\n    }\n    get(idx) {\n        return this.board[idx]\n    }\n\n    completeBoard() {\n        return this.board.every(el => el !== \"_\")\n    }\n    addCharacter(indices, char) {\n        for(let i of indices) {\n            this.board[indices] = char\n        }\n            \n    }\n\n}\n\n\nlet test = new Board(5)\nconsole.log(test.addCharacter(\"Pizza\", \"z\"))\n\nmodule.exports = Board\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const {allTheWords} = require(\"./word.js\")\nclass ComputerPlayer {\n    constructor(name = \"Opponent\") {\n        this.dictionary = allTheWords\n        this.word = \"\" \n        this.secretWord = \"\"       \n    }\n    \n    chooseSecretWord() {\n        let idx = Math.floor(Math.random() * this.dictionary.length)\n        this.secretWord = this.dictionary[idx]\n        return this.secretWord\n    }\n\n    checkGuess(char) {\n        let indices = []\n        for(let i = 0; this.secretWord.length; i++) {\n            if (letter === char) {\n                indices.push(i)\n            }\n        }\n        return indices\n    }\n\n    reveal() {\n        return this.secretWord()\n    }\n\n}\n\nmodule.exports = ComputerPlayer","// const {hangManPics} = require(\"./hangmanPics.js\")\nimport HumanPlayer from \"./HumanPlayer.js\"\nimport ComputerPlayer from \"./ComputerPlayer.js\"\nimport {allTheWords} from \"./word.js\"\nimport Board from \"./Board.js\"\n\nclass Game {\n   constructor(players) {\n       this.ref = players[\"ref\"]\n       this.guesser = players[\"guesser\"]\n       this.guessesRemaining = 6;\n       this.guessedLetters = [];\n   }\n   play() {\n       let boardLength = this.ref.chooseSecretWord()\n       this.board = new Board(boardLength);\n       while(!this.isGameOver()) {\n           console.log(hangManPics[this.guessesRemaining])\n           console.log(\"Letters guessed so far\");\n           console.log(\"Guessed so far: \" + this.guessedLetters.join(\", \"));\n           this.guesser.displayBoard(this.board);\n           this.ref.displayBoard(this.board);\n           let guess = \"0\";\n           while(!this.isValidGuess(guess)) {\n               guess = this.guesser.getMove();\n               if(!this.isValidGuess(guess)) {\n                   console.log(\"INVALID GUESS!\")\n               }\n           }\n           this.guessedLetters.push(guess)\n           let positions = this.ref.checkGuess(guess);\n           if(positions.length === 0) {\n               this.guessesRemaining--;\n           }\n           this.board.addChar(positions, guess);\n       }\n       if(this.guessesRemaining > 0) {\n           console.log(this.guesser.name + \" wins!\")\n       } else {\n           let winningWord = this.ref.reveal();\n           console.log(\"word was \" + winningWord)\n           console.log(this.ref.name + \" wins!\")\n       }\n   }\n   isValidGuess(char) {\n       let alph = \"abcdefghijklmnopqrstuvwxyz\";\n       return char.length === 1 && alph.includes(char) &&\n       !this.guessedLetters.includes(char);\n   }\n   isGameOver() {\n      return  this.board.isComplete() || this.guessesRemaining === 0;\n   }\n}\nlet human = new HumanPlayer(\"corey\")\nlet robo = new ComputerPlayer();\nlet game = new Game({ref: human, guesser: robo})\ngame.play();\nexport default Game;","class HumanPlayer {\n    constructor(name) {\n        this.name = name\n    }\n\n    getMove() {\n        return readline.question(\"Enter your letter!: \") \n    }\n\n    displayBoard(board) {  \n       let output = \"\"\n       for(let i = 0; i < board.length(); i++) {\n           output += board.get(i)\n       }   \n    }\n    \n}\n\n// let Board = require(\"./Board.js\")\n\n// let human = new HumanPlayer(\"Marvin\")\n// console.log(human.displayBoard(new Array(5)))\nmodule.exports = HumanPlayer;","class View {\n    constructor(game, el) {\n        this.game = game\n        this.el = el\n        this.displayBoard()\n    }\n\n    displayBoard() {\n        let gameDiv = document.createElement(\"div\")\n        gameDiv.id = \"boardDiv\"\n        this.el.innerHTML = \"\"\n        this.game.board.reveal().forEach((row) => {\n            let ul = document.createElement(\"ul\")\n            ul.classList.add(\"row\")\n            row.forEach((val) => {\n                let li = document.createElement(\"li\")\n                li.innerText = val;\n                ul.appendChild(li)\n            })\n            gameDiv.appendChild(ul)\n        })\n        this.el.appendChild(gameDiv)\n    }\n}","import Game from \"./Game.js\"\nimport Board from \"./Board.js\"\nimport HumanPlayer from \"./HumanPlayer.js\"\nimport ComputerPlayer from \"./ComputerPlayer.js\"\nimport {allTheWords} from \"./word.js\"\nimport View from \"./View.js\"\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let game = new Game(\n        new HumanPlayer(\"Marvin\"),\n        new ComputerPlayer(\"Opponent\")\n    )\n    let el = document.querySelector(\"#hangmanAgain\")\n    new View(game, el)\n})\n\n","let allTheWords = [\"able\", \"about\", \"account\", \"acid\", \"across\", \"addition\", \"adjustment\", \"advertisement\", \"after\", \"again\", \"against\", \"agreement\", \"almost\", \"among\", \"amount\", \"amusement\", \"angle\", \"angry\", \"animal\", \"answer\", \"apparatus\", \"apple\", \"approval\", \"arch\", \"argument\", \"army\", \"attack\", \"attempt\", \"attention\", \"attraction\", \"authority\", \"automatic\", \"awake\", \"baby\", \"back\", \"balance\", \"ball\", \"band\", \"base\", \"basin\", \"basket\", \"bath\", \"beautiful\", \"because\", \"before\", \"behaviour\", \"belief\", \"bell\", \"bent\", \"berry\", \"between\", \"bird\", \"birth\", \"bite\", \"bitter\", \"black\", \"blade\", \"blood\", \"blow\", \"blue\", \"board\", \"boat\", \"body\", \"boiling\", \"bone\", \"book\", \"boot\", \"bottle\", \"brain\", \"brake\", \"branch\", \"brass\", \"bread\", \"breath\", \"brick\", \"bridge\", \"bright\", \"broken\", \"brother\", \"brown\", \"brush\", \"bucket\", \"building\", \"bulb\", \"burn\", \"burst\", \"business\", \"butter\", \"button\", \"cake\", \"camera\", \"canvas\", \"card\", \"care\", \"carriage\", \"cart\", \"cause\", \"certain\", \"chain\", \"chalk\", \"chance\", \"change\", \"cheap\", \"cheese\", \"chemical\", \"chest\", \"chief\", \"chin\", \"church\", \"circle\", \"clean\", \"clear\", \"clock\", \"cloth\", \"cloud\", \"coal\", \"coat\", \"cold\", \"collar\", \"colour\", \"comb\", \"come\", \"comfort\", \"committee\", \"common\", \"company\", \"comparison\", \"competition\", \"complete\", \"complex\", \"condition\", \"connection\", \"conscious\", \"control\", \"cook\", \"copper\", \"copy\", \"cord\", \"cork\", \"cotton\", \"cough\", \"country\", \"cover\", \"crack\", \"credit\", \"crime\", \"cruel\", \"crush\", \"current\", \"curtain\", \"curve\", \"cushion\", \"damage\", \"danger\", \"dark\", \"daughter\", \"dead\", \"dear\", \"death\", \"debt\", \"decision\", \"deep\", \"degree\", \"delicate\", \"dependent\", \"design\", \"desire\", \"destruction\", \"detail\", \"development\", \"different\", \"digestion\", \"direction\", \"dirty\", \"discovery\", \"discussion\", \"disease\", \"disgust\", \"distance\", \"distribution\", \"division\", \"door\", \"doubt\", \"down\", \"drain\", \"drawer\", \"dress\", \"drink\", \"driving\", \"drop\", \"dust\", \"early\", \"earth\", \"east\", \"edge\", \"education\", \"effect\", \"elastic\", \"electric\", \"engine\", \"enough\", \"equal\", \"error\", \"even\", \"event\", \"ever\", \"every\", \"example\", \"exchange\", \"existence\", \"expansion\", \"experience\", \"expert\", \"face\", \"fact\", \"fall\", \"false\", \"family\", \"farm\", \"father\", \"fear\", \"feather\", \"feeble\", \"feeling\", \"female\", \"fertile\", \"fiction\", \"field\", \"fight\", \"finger\", \"fire\", \"first\", \"fish\", \"fixed\", \"flag\", \"flame\", \"flat\", \"flight\", \"floor\", \"flower\", \"fold\", \"food\", \"foolish\", \"foot\", \"force\", \"fork\", \"form\", \"forward\", \"fowl\", \"frame\", \"free\", \"frequent\", \"friend\", \"from\", \"front\", \"fruit\", \"full\", \"future\", \"garden\", \"general\", \"girl\", \"give\", \"glass\", \"glove\", \"goat\", \"gold\", \"good\", \"government\", \"grain\", \"grass\", \"great\", \"green\", \"grey\", \"grip\", \"group\", \"growth\", \"guide\", \"hair\", \"hammer\", \"hand\", \"hanging\", \"happy\", \"harbour\", \"hard\", \"harmony\", \"hate\", \"have\", \"head\", \"healthy\", \"hear\", \"hearing\", \"heart\", \"heat\", \"help\", \"high\", \"history\", \"hole\", \"hollow\", \"hook\", \"hope\", \"horn\", \"horse\", \"hospital\", \"hour\", \"house\", \"humour\", \"idea\", \"important\", \"impulse\", \"increase\", \"industry\", \"insect\", \"instrument\", \"insurance\", \"interest\", \"invention\", \"iron\", \"island\", \"jelly\", \"jewel\", \"join\", \"journey\", \"judge\", \"jump\", \"keep\", \"kettle\", \"kick\", \"kind\", \"kiss\", \"knee\", \"knife\", \"knot\", \"knowledge\", \"land\", \"language\", \"last\", \"late\", \"laugh\", \"lead\", \"leaf\", \"learning\", \"leather\", \"left\", \"letter\", \"level\", \"library\", \"lift\", \"light\", \"like\", \"limit\", \"line\", \"linen\", \"liquid\", \"list\", \"little\", \"living\", \"lock\", \"long\", \"look\", \"loose\", \"loss\", \"loud\", \"love\", \"machine\", \"make\", \"male\", \"manager\", \"mark\", \"market\", \"married\", \"mass\", \"match\", \"material\", \"meal\", \"measure\", \"meat\", \"medical\", \"meeting\", \"memory\", \"metal\", \"middle\", \"military\", \"milk\", \"mind\", \"mine\", \"minute\", \"mist\", \"mixed\", \"money\", \"monkey\", \"month\", \"moon\", \"morning\", \"mother\", \"motion\", \"mountain\", \"mouth\", \"move\", \"much\", \"muscle\", \"music\", \"nail\", \"name\", \"narrow\", \"nation\", \"natural\", \"near\", \"necessary\", \"neck\", \"need\", \"needle\", \"nerve\", \"news\", \"night\", \"noise\", \"normal\", \"north\", \"nose\", \"note\", \"number\", \"observation\", \"offer\", \"office\", \"only\", \"open\", \"operation\", \"opinion\", \"opposite\", \"orange\", \"order\", \"organization\", \"ornament\", \"other\", \"oven\", \"over\", \"owner\", \"page\", \"pain\", \"paint\", \"paper\", \"parallel\", \"parcel\", \"part\", \"past\", \"paste\", \"payment\", \"peace\", \"pencil\", \"person\", \"physical\", \"picture\", \"pipe\", \"place\", \"plane\", \"plant\", \"plate\", \"play\", \"please\", \"pleasure\", \"plough\", \"pocket\", \"point\", \"poison\", \"polish\", \"political\", \"poor\", \"porter\", \"position\", \"possible\", \"potato\", \"powder\", \"power\", \"present\", \"price\", \"print\", \"prison\", \"private\", \"probable\", \"process\", \"produce\", \"profit\", \"property\", \"prose\", \"protest\", \"public\", \"pull\", \"pump\", \"punishment\", \"purpose\", \"push\", \"quality\", \"question\", \"quick\", \"quiet\", \"quite\", \"rail\", \"rain\", \"range\", \"rate\", \"reaction\", \"reading\", \"ready\", \"reason\", \"receipt\", \"record\", \"regret\", \"regular\", \"relation\", \"religion\", \"representative\", \"request\", \"respect\", \"responsible\", \"rest\", \"reward\", \"rhythm\", \"rice\", \"right\", \"ring\", \"river\", \"road\", \"roll\", \"roof\", \"room\", \"root\", \"rough\", \"round\", \"rule\", \"safe\", \"sail\", \"salt\", \"same\", \"sand\", \"scale\", \"school\", \"science\", \"scissors\", \"screw\", \"seat\", \"second\", \"secret\", \"secretary\", \"seed\", \"seem\", \"selection\", \"self\", \"send\", \"sense\", \"separate\", \"serious\", \"servant\", \"shade\", \"shake\", \"shame\", \"sharp\", \"sheep\", \"shelf\", \"ship\", \"shirt\", \"shock\", \"shoe\", \"short\", \"shut\", \"side\", \"sign\", \"silk\", \"silver\", \"simple\", \"sister\", \"size\", \"skin\", \"skirt\", \"sleep\", \"slip\", \"slope\", \"slow\", \"small\", \"smash\", \"smell\", \"smile\", \"smoke\", \"smooth\", \"snake\", \"sneeze\", \"snow\", \"soap\", \"society\", \"sock\", \"soft\", \"solid\", \"some\", \"song\", \"sort\", \"sound\", \"soup\", \"south\", \"space\", \"spade\", \"special\", \"sponge\", \"spoon\", \"spring\", \"square\", \"stage\", \"stamp\", \"star\", \"start\", \"statement\", \"station\", \"steam\", \"steel\", \"stem\", \"step\", \"stick\", \"sticky\", \"stiff\", \"still\", \"stitch\", \"stocking\", \"stomach\", \"stone\", \"stop\", \"store\", \"story\", \"straight\", \"strange\", \"street\", \"stretch\", \"strong\", \"structure\", \"substance\", \"such\", \"sudden\", \"sugar\", \"suggestion\", \"summer\", \"support\", \"surprise\", \"sweet\", \"swim\", \"system\", \"table\", \"tail\", \"take\", \"talk\", \"tall\", \"taste\", \"teaching\", \"tendency\", \"test\", \"than\", \"that\", \"then\", \"theory\", \"there\", \"thick\", \"thin\", \"thing\", \"this\", \"thought\", \"thread\", \"throat\", \"through\", \"through\", \"thumb\", \"thunder\", \"ticket\", \"tight\", \"till\", \"time\", \"tired\", \"together\", \"tomorrow\", \"tongue\", \"tooth\", \"touch\", \"town\", \"trade\", \"train\", \"transport\", \"tray\", \"tree\", \"trick\", \"trouble\", \"trousers\", \"true\", \"turn\", \"twist\", \"umbrella\", \"under\", \"unit\", \"value\", \"verse\", \"very\", \"vessel\", \"view\", \"violent\", \"voice\", \"waiting\", \"walk\", \"wall\", \"warm\", \"wash\", \"waste\", \"watch\", \"water\", \"wave\", \"weather\", \"week\", \"weight\", \"well\", \"west\", \"wheel\", \"when\", \"where\", \"while\", \"whip\", \"whistle\", \"white\", \"wide\", \"will\", \"wind\", \"window\", \"wine\", \"wing\", \"winter\", \"wire\", \"wise\", \"with\", \"woman\", \"wood\", \"wool\", \"word\", \"work\", \"worm\", \"wound\", \"writing\", \"wrong\", \"year\", \"yellow\", \"yesterday\", \"young\"]\n\n\n\nmodule.exports = {allTheWords}"],"sourceRoot":""}